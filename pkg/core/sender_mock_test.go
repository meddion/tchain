// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/meddion/pkg/core (interfaces: Sender)

// Package core is a generated GoMock package.
package core

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSender is a mock of Sender interface.
type MockSender struct {
	ctrl     *gomock.Controller
	recorder *MockSenderMockRecorder
}

// MockSenderMockRecorder is the mock recorder for MockSender.
type MockSenderMockRecorder struct {
	mock *MockSender
}

// NewMockSender creates a new mock instance.
func NewMockSender(ctrl *gomock.Controller) *MockSender {
	mock := &MockSender{ctrl: ctrl}
	mock.recorder = &MockSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSender) EXPECT() *MockSenderMockRecorder {
	return m.recorder
}

// SendBlock mocks base method.
func (m *MockSender) SendBlock(arg0 BlockReq) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendBlock", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendBlock indicates an expected call of SendBlock.
func (mr *MockSenderMockRecorder) SendBlock(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendBlock", reflect.TypeOf((*MockSender)(nil).SendBlock), arg0)
}

// SendIsAlive mocks base method.
func (m *MockSender) SendIsAlive() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendIsAlive")
	ret0, _ := ret[0].(error)
	return ret0
}

// SendIsAlive indicates an expected call of SendIsAlive.
func (mr *MockSenderMockRecorder) SendIsAlive() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendIsAlive", reflect.TypeOf((*MockSender)(nil).SendIsAlive))
}

// SendPeersDiscovery mocks base method.
func (m *MockSender) SendPeersDiscovery() (PeersDiscoveryResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendPeersDiscovery")
	ret0, _ := ret[0].(PeersDiscoveryResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendPeersDiscovery indicates an expected call of SendPeersDiscovery.
func (mr *MockSenderMockRecorder) SendPeersDiscovery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendPeersDiscovery", reflect.TypeOf((*MockSender)(nil).SendPeersDiscovery))
}

// SendTransaction mocks base method.
func (m *MockSender) SendTransaction(arg0 TransactionReq) (TransactionResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendTransaction", arg0)
	ret0, _ := ret[0].(TransactionResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendTransaction indicates an expected call of SendTransaction.
func (mr *MockSenderMockRecorder) SendTransaction(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendTransaction", reflect.TypeOf((*MockSender)(nil).SendTransaction), arg0)
}
